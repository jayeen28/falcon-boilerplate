{
  "Create crud routes and socket function": {
    "scope": "javascript",
    "prefix": "service",
    "body": [
      "const { create, get, getAll, update, remove } = require('./$TM_FILENAME_BASE.entity');",
      "",
      "/**",
      " * API RECEIVER INSTRUCTIONS:",
      " * 1. Keep your API route logic separate from entity logic.",
      " * 2. Call functions from entity file (ex: $TM_FILENAME_BASE.entity.js) to handle requests.",
      " */",
      "function api() {",
      "",
      "  /**",
      "   * POST /$TM_FILENAME_BASE",
      "   * @description This route is used to create a $TM_FILENAME_BASE.",
      "   * @response {Object} 201 - The new $TM_FILENAME_BASE.",
      "   * @body {Object} - The data to create a $TM_FILENAME_BASE.",
      "  */",
      "  this.route.post('/$TM_FILENAME_BASE', create(this));",
      "",
      "  /**",
      "   * GET /$TM_FILENAME_BASE",
      "   * @description This route is used to get all ${TM_FILENAME_BASE}s.",
      "   * @response {Object} 200 - The paginated ${TM_FILENAME_BASE}s.",
      "   * @response {Array} 200 - The ${TM_FILENAME_BASE}s without paginations.",
      "  */",
      "  this.route.get('/$TM_FILENAME_BASE', getAll(this));",
      "",
      "  /**",
      "   * GET /$TM_FILENAME_BASE/:id",
      "   * @description This route is used to get a $TM_FILENAME_BASE.",
      "   * @response {Object} 200 - The $TM_FILENAME_BASE.",
      "  */",
      "  this.route.get('/$TM_FILENAME_BASE/:id', get(this));",
      "",
      "  /**",
      "   * PATCH /$TM_FILENAME_BASE/:id",
      "   * @description This route is used to update a $TM_FILENAME_BASE.",
      "   * @response {Object} 200 - The updated $TM_FILENAME_BASE.",
      "   * @body {Object} - The data to update a $TM_FILENAME_BASE.",
      "  */",
      "  this.route.patch('/$TM_FILENAME_BASE/:id', update(this));",
      "",
      "  /**",
      "   * DELETE /$TM_FILENAME_BASE/:id",
      "   * @description This route is used to remove a $TM_FILENAME_BASE.",
      "   * @response {Object} 200 - The removed $TM_FILENAME_BASE.",
      "  */",
      "  this.route.delete('/$TM_FILENAME_BASE/:id', remove(this));",
      "}",
      "",
      "/**",
      " * SOCKET RECEIVER INSTRUCTIONS:",
      " * 1. Keep your socket logic separate from entity logic.",
      " * 2. Call event handler functions from entity file (ex: $TM_FILENAME_BASE.entity.js)",
      " */",
      "function socket() {",
      "",
      "  // this.socket.on('demo', demoHandlerFromEntity(this));",
      "}",
      "",
      "module.exports = { api, socket };"
    ],
    "description": "Creates route and socket boilerplate with coder instructions"
  }
}
