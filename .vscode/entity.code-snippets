{
  "Generate Entity CRUD Operations": {
    "scope": "javascript,typescript",
    "prefix": "entity",
    "body": [
      "const TABLE_NAME = '${1:entity}';",
      "",
      "module.exports.create = ({ db }) => async (req, res, next) => {",
      "  try {",
      "    const ${1/([A-Z][a-z]+)/${1:/camelcase}/} = await db.create({ table: TABLE_NAME, payload: { data: req.body } });",
      "    return res.status(201).send(${1/([A-Z][a-z]+)/${1:/camelcase}/});",
      "  } catch (e) { next(e) }",
      "};",
      "",
      "module.exports.get = ({ db }) => async (req, res, next) => {",
      "  try {",
      "    const ${1/([A-Z][a-z]+)/${1:/camelcase}/} = await db.findOne({ table: TABLE_NAME, payload: { where: { id: parseInt(req.params.id) } } });",
      "    if (!${1/([A-Z][a-z]+)/${1:/camelcase}/}) return res.status(404).send({ message: 'Not found' });",
      "    return res.status(200).send(${1/([A-Z][a-z]+)/${1:/camelcase}/});",
      "  } catch (e) { next(e) }",
      "};",
      "",
      "module.exports.getAll = ({ db }) => async (req, res, next) => {",
      "  try {",
      "    const ${1/([A-Z][a-z]+)/${1:/camelcase}/}s = await db.find({ table: TABLE_NAME, payload: { query: req.query } });",
      "    return res.status(200).send(${1/([A-Z][a-z]+)/${1:/camelcase}/}s);",
      "  } catch (e) { next(e) }",
      "};",
      "",
      "module.exports.update = ({ db }) => async (req, res, next) => {",
      "  try {",
      "    const ${1/([A-Z][a-z]+)/${1:/camelcase}/} = await db.update({ table: TABLE_NAME, payload: { id: parseInt(req.params.id), data: req.body } });",
      "    return res.status(200).send(${1/([A-Z][a-z]+)/${1:/camelcase}/});",
      "  } catch (e) { next(e) }",
      "};",
      "",
      "module.exports.remove = ({ db }) => async (req, res, next) => {",
      "  try {",
      "    const ${1/([A-Z][a-z]+)/${1:/camelcase}/} = await db.softDelete({ table: TABLE_NAME, payload: { id: parseInt(req.params.id) } });",
      "    return res.status(200).send(${1/([A-Z][a-z]+)/${1:/camelcase}/});",
      "  } catch (e) { next(e) }",
      "};"
    ],
    "description": "Generate Entity CRUD Operations"
  }
}
